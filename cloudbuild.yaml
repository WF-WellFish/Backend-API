steps:
  # Step 0: Install Composer dependencies
  - name: 'composer:latest'
    args: ['install']

  # Step 1: Create the .env and .env.testing files
  - name: 'php:8.2-cli'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cp .env.example .env.testing
        php artisan key:generate --env=testing
        sed -i "s/^APP_ENV=.*/APP_ENV=testing/" .env.testing
        sed -i "s/^DB_HOST=.*/DB_HOST=$$DB_HOST_ST/" .env.testing
        sed -i "s/^DB_DATABASE=.*/DB_DATABASE=wellfish_test/" .env.testing
        sed -i "s/^DB_USERNAME=.*/DB_USERNAME=root/" .env.testing
        sed -i "s/^DB_PASSWORD=.*/DB_PASSWORD=$$DB_PASSWORD_ST/" .env.testing
        ls -la
        cat .env.testing
    secretEnv:
        - 'DB_HOST_ST'
        - 'DB_PASSWORD_ST'

  # Step 2: Run Pint lint check
  - name: 'php:8.2-cli'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        vendor/bin/pint --test

  # Step 3: Run the PHPUnit tests
  - name: 'php:8.2-cli'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update
        apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev libonig-dev libxml2-dev libzip-dev unzip
        docker-php-ext-install pdo pdo_mysql gd zip bcmath
        vendor/bin/phpunit

# Specify the timeout
timeout: '1200s'

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DB_HOST_STAGING_TEST/versions/1
      env: 'DB_HOST_ST'
    - versionName: projects/$PROJECT_ID/secrets/DDB_PASSWORD_STAGING_TEST/versions/1
      env: 'DB_PASSWORD_ST'
