steps:
  # Step 0: Install Composer dependencies
  - id: 'Install dependencies'
    name: 'composer:latest'
    args: ['install']

  # Step 1: Create the .env.testing files
  - id: 'Create setup env testing file'
    name: 'gcr.io/wellfish/php8.2-cli'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cp .env.example .env.testing
        php artisan key:generate --env=testing
        sed -i "s/^APP_ENV=.*/APP_ENV=testing/" .env.testing
        sed -i "s/^DB_HOST=.*/DB_HOST=$$DB_HOST_ST/" .env.testing
        sed -i "s/^DB_DATABASE=.*/DB_DATABASE=wellfish_test/" .env.testing
        sed -i "s/^DB_USERNAME=.*/DB_USERNAME=root/" .env.testing
        sed -i "s/^DB_PASSWORD=.*/DB_PASSWORD=$$DB_PASSWORD_ST/" .env.testing
        sed -i "s/^GOOGLE_CLOUD_STORAGE_BUCKET=.*/GOOGLE_CLOUD_STORAGE_BUCKET=wellfish-staging/" .env.testing
        sed -i "s/^GOOGLE_CLOUD_STORAGE_BUCKET_PUBLIC=.*/GOOGLE_CLOUD_STORAGE_BUCKET_PUBLIC=wellfish-staging-public/" .env.testing
        sed -i "s/^GOOGLE_CLOUD_PROJECT_ID=.*/GOOGLE_CLOUD_PROJECT_ID=wellfish/" .env.testing
        sed -i "s/^MACHINE_LEARNING_API_URL=.*/MACHINE_LEARNING_API_URL=localhost:3000/" .env.testing
        # ls -la
        cat .env.testing
    secretEnv: [
        'DB_HOST_ST',
        'DB_PASSWORD_ST'
    ]

  # Step 2: Run Pint lint check
  - id: 'Check Code style using Pint'
    name: 'gcr.io/wellfish/php8.2-cli'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        vendor/bin/pint --test

  #TODO : Fix masalah connect ke mysql instance ini kalau mysql instance nya gk ngasih network 0.0.0.0/0 dia gk mau ke connect
  # Step 3: Run the PHPUnit tests
  - id: 'Run PHPUnit tests'
    name: 'gcr.io/wellfish/php8.2-cli'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        vendor/bin/phpunit

  #TODO : Bikin CD saat ini bermasalah karena ssh nya gk bisa connect ke compute engine nya
#  # Step 4: Deploy to Compute Engine via SSH
#  - id: 'Deploy to Compute engine via ssh'
#    name: 'gcr.io/cloud-builders/gcloud'
#    entrypoint: '/bin/sh'
#    args:
#      - '-c'
#      - |
#        mkdir -p ~/root/.ssh && \\
#        gcloud secrets versions access latest --secret=wf-cb-staging-ssh-key > ~/root/.ssh/id_rsa && \\
#        chmod 600 ~/root/.ssh/id_rsa && \\
#        gcloud secrets versions access latest --secret=wf-cb-staging-ssh-key-pub > ~/root/.ssh/id_rsa.pub && \\
#        chmod 600 ~/root/.ssh/id_rsa.pub && \\
#        set -x && \\
#        gcloud compute ssh backend-api-staging --ssh-key-file=~/root/.ssh/id_rsa --zone=asia-southeast2-b

# Specify the timeout
timeout: '1200s'
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/MYSQL_HOST_STAGING/versions/latest
      env: 'DB_HOST_ST'
    - versionName: projects/$PROJECT_ID/secrets/MYSQL_PASSWORD_STAGING/versions/latest
      env: 'DB_PASSWORD_ST'
