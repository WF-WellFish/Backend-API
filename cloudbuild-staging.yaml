steps:
  # Step 0: Install Composer dependencies
  - name: 'composer:latest'
    args: ['install']

  # Step 1: Create the .env.testing files
  - name: 'php:8.2-cli'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cp .env.example .env.testing
        php artisan key:generate --env=testing
        sed -i "s/^APP_ENV=.*/APP_ENV=testing/" .env.testing
        sed -i "s/^DB_HOST=.*/DB_HOST=$$DB_HOST_ST/" .env.testing
        sed -i "s/^DB_DATABASE=.*/DB_DATABASE=wellfish_test/" .env.testing
        sed -i "s/^DB_USERNAME=.*/DB_USERNAME=root/" .env.testing
        sed -i "s/^DB_PASSWORD=.*/DB_PASSWORD=$$DB_PASSWORD_ST/" .env.testing
        ls -la
        cat .env.testing
    secretEnv: [
        'DB_HOST_ST',
        'DB_PASSWORD_ST'
    ]

  # Step 2: Run Pint lint check
  - name: 'php:8.2-cli'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        vendor/bin/pint --test

  # Step Connect to database through cloud sql proxy
  - id: "docker-build"
    name: "gcr.io/cloud-builders/docker"
    args: [ "build", "-t", "${_IMAGE_NAME}", "sql-proxy/." ]

  - id: "docker-push"
    name: "gcr.io/cloud-builders/docker"
    args: [ "push", "${_IMAGE_NAME}" ]

  - id: "docker-layer"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        echo "FROM $_IMAGE_NAME
        COPY --from=gcr.io/cloud-sql-connectors/cloud-sql-proxy /cloud-sql-proxy /cloudsql/cloud-sql-proxy" > Dockerfile-proxy;

        docker build -f Dockerfile-proxy -t ${_IMAGE_NAME}-proxy .

  # For TCP connections
  - id: "migrate-tcp"
    name: "${_IMAGE_NAME}-proxy"
    dir: sql-proxy
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        /cloudsql/cloud-sql-proxy --port ${_DATABASE_PORT} ${_INSTANCE_CONNECTION_NAME} & sleep 2;
        apt-get update
        apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev libonig-dev libxml2-dev libzip-dev unzip
        docker-php-ext-install pdo pdo_mysql gd zip bcmath
        vendor/bin/phpunit

  # Step 3: Run the PHPUnit tests
#  - name: 'php:8.2-cli'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        apt-get update
#        apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev libonig-dev libxml2-dev libzip-dev unzip
#        docker-php-ext-install pdo pdo_mysql gd zip bcmath
#        vendor/bin/phpunit

# Specify the timeout
timeout: '1200s'

substitutions:
  _INSTANCE_CONNECTION_NAME: ${PROJECT_ID}:asia-southeast2:wellfish-staging
  _DATABASE_PORT: '3306'
  _DATABASE_TYPE: mysql
  _DATABASE_PASSWORD_KEY: MYSQL_PASSWORD_STAGING
  _DATABASE_HOST_KEY: MYSQL_HOST_STAGING
  _IMAGE_NAME: gcr.io/${PROJECT_ID}/sample-sql-proxy

availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/${_DATABASE_HOST_KEY}/versions/latest
      env: 'DB_HOST_ST'
    - versionName: projects/${PROJECT_ID}/secrets/${_DATABASE_PASSWORD_KEY}/versions/latest
      env: 'DB_PASSWORD_ST'
